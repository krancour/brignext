apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "brignext.apiserver.fullname" . }}
  labels:
    {{- include "brignext.labels" . | nindent 4 }}
    {{- include "brignext.apiserver.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.apiserver.replicas }}
  selector:
    matchLabels:
      {{- include "brignext.selectorLabels" . | nindent 6 }}
      {{- include "brignext.apiserver.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "brignext.selectorLabels" . | nindent 8 }}
        {{- include "brignext.apiserver.labels" . | nindent 8 }}
      {{- if .Values.apiserver.tls.enabled }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/apiserver/cert-secret.yaml") . | sha256sum }}
      {{- end }}
    spec:
      serviceAccount: {{ include "brignext.apiserver.fullname" . }}
      containers:
      - name: apiserver
        image: {{ .Values.apiserver.image.repository }}:{{ .Values.apiserver.image.tag }}
        imagePullPolicy: {{ .Values.apiserver.image.pullPolicy }}
        args:
        - --logtostderr=true
        env:
        - name: API_SERVER_ROOT_USER_ENABLED
          value: {{ quote .Values.apiserver.rootUser.enabled }}
        {{- if .Values.apiserver.rootUser.enabled }}
        - name: API_SERVER_ROOT_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "brignext.apiserver.fullname" . }}
              key: root-user-password
        {{- end }}
        - name: OIDC_ENABLED
          value: {{ quote .Values.apiserver.oidc.enabled }}
        {{- if .Values.apiserver.oidc.enabled }}
        - name: OIDC_PROVIDER_URL
          value: {{ .Values.apiserver.oidc.providerURL }}
        - name: OIDC_CLIENT_ID
          value: {{ .Values.apiserver.oidc.clientID }}
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "brignext.apiserver.fullname" . }}
              key: oidc-client-secret
        - name: OIDC_REDIRECT_URL_BASE
          {{- if or (and (not .Values.apiserver.ingress.enabled) .Values.apiserver.tls.enabled) (and .Values.apiserver.ingress.enabled .Values.apiserver.ingress.tls.enabled) }}
          value: https://{{ .Values.apiserver.host }}
          {{- else }}
          value: http://{{ .Values.apiserver.host }}
          {{- end }}
        {{- end }}
        - name: API_SERVER_TLS_ENABLED
          value: {{ quote .Values.apiserver.tls.enabled }}
        {{- if .Values.apiserver.tls.enabled }}
        - name: API_SERVER_TLS_CERT_PATH
          value: /app/certs/tls.crt
        - name: API_SERVER_TLS_KEY_PATH
          value: /app/certs/tls.key
        {{- end }}
        - name: MONGODB_HOST
          value: {{ include "call-nested" (list . "mongodb" "mongodb.fullname") }}.{{ .Release.Namespace }}.svc.cluster.local
        - name: MONGODB_PORT
          value: {{ quote .Values.mongodb.service.port }}
        - name: MONGODB_DATABASE
          value: {{ .Values.mongodb.mongodbDatabase }}
        - name: MONGODB_USERNAME
          value: {{ .Values.mongodb.mongodbUsername }}
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "call-nested" (list . "mongodb" "mongodb.fullname") }}
              key: mongodb-password
        - name: REDIS_HOST
          value: {{ include "call-nested" (list . "redis" "redis.fullname") }}-master.{{ .Release.Namespace }}.svc.cluster.local
        - name: REDIS_PORT
          value: {{ quote .Values.redis.redisPort }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "call-nested" (list . "redis" "redis.fullname") }}
              key: redis-password
        - name: REDIS_DATABASE
          value: {{ quote .Values.apiserver.redis.database }}
        {{- if .Values.apiserver.tls.enabled }}
        volumeMounts:
        - name: cert
          mountPath: /app/certs
          readOnly: true
        {{- end }}
        readinessProbe:
          httpGet:
            port: 8080
            path: /healthz
            {{- if .Values.apiserver.tls.enabled }}
            scheme: HTTPS
            {{- else }}
            scheme: HTTP
            {{- end }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: 8080
            path: /healthz
            {{- if .Values.apiserver.tls.enabled }}
            scheme: HTTPS
            {{- else }}
            scheme: HTTP
            {{- end }}
          initialDelaySeconds: 15
          periodSeconds: 20
      {{- if .Values.apiserver.tls.enabled }}
      volumes:
      - name: cert
        secret:
          secretName: {{ include "brignext.apiserver.fullname" . }}-cert
      {{- end }}
      {{- with .Values.apiserver.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiserver.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
